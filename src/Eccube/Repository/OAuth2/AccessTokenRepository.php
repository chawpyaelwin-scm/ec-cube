<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Eccube\Repository\OAuth2;

use Eccube\Entity\OAuth2\AccessToken;
use Eccube\Repository\AbstractRepository;
use OAuth2\Storage\AccessTokenInterface;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * AccessTokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 *
 * @see http://bshaffer.github.io/oauth2-server-php-docs/cookbook/doctrine2/
 */
class AccessTokenRepository extends AbstractRepository implements AccessTokenInterface
{
    /**
     * ClientRepository constructor.
     *
     * @param RegistryInterface $registry
     */
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, AccessToken::class);
    }

    /**
     * トークンを指定して、 access token のフィールドの配列を返す.
     *
     * @param string $oauthToken トークン文字列
     *
     * @return array access token のフィールドの配列
     */
    public function getAccessToken($oauthToken)
    {
        $AccessToken = $this->findOneBy(['token' => $oauthToken]);
        if (is_object($AccessToken)) {
            $token = $AccessToken->toArray();
            $Client = $AccessToken->getClient();
            if ($Client->hasMember() || $Client->hasCustomer()) {
                $token['client_id'] = $Client->getId();
                $UserInfo = $AccessToken->getUser();
                if ($UserInfo) {
                    $token['user_id'] = $UserInfo->getSub();
                }
                $token['expires'] = $token['expires']->getTimestamp();

                return $token;
            }
        }

        return null;
    }

    /**
     * AccessToken を生成して保存する.
     *
     * @param string $oauthToken トークン文字列
     * @param string $clientIdentifier client_id 文字列
     * @param integer $user_id UserInfo::id
     * @param integer $expires 有効期限の UNIX タイムスタンプ
     * @param string $scope 認可された scope. スペース区切りで複数指定可能
     */
    public function setAccessToken($oauthToken, $clientIdentifier, $user_id, $expires, $scope = null)
    {
        $client = $this->_em->getRepository('Eccube\Entity\OAuth2\Client')
                            ->findOneBy(['client_identifier' => $clientIdentifier]);
        // response_type=token の時は UserInfo::id が渡ってくる. それ以外は UserInfo::sub が渡ってくる
        $searchConditions = [];
        if (is_numeric($user_id)) {
            $searchConditions['id'] = $user_id;
        } else {
            $searchConditions['sub'] = $user_id;
        }
        $user = $this->_em->getRepository('Eccube\Entity\OAuth2\OpenID\UserInfo')->findOneBy($searchConditions);
        $AccessToken = new \Eccube\Entity\OAuth2\AccessToken();
        $now = new \DateTime();
        $AccessToken->setPropertiesFromArray([
            'token' => $oauthToken,
            'client' => $client,
            'user' => $user,
            'expires' => $now->setTimestamp($expires),
            'scope' => $scope,
        ]);
        $this->_em->persist($AccessToken);
        $this->_em->flush($AccessToken);
    }
}
